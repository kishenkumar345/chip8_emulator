#pragma once
#ifndef CHIP8_VM
#define CHIP8_VM

#include <cstdint>

class chip8VM
{
public:
    uint8_t delayTimer;    //Decrement at rate 60 times per second (60Hz)
    uint8_t soundTimer;    //Functions like delay timer but gives a beeping sound while not 0
    uint8_t display[64][32]; //64x32 Pixel Display

    //4KB RAM
    uint8_t memory[4096] = {
        //Memory allocation to fonts
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

    //Keyboard
    uint8_t keyboard[16] = {
        0x30, 0x31, 0x32, 0x33, 0x34,
        0x35, 0x36, 0x37, 0x38, 0x39,
        0x41, 0x42, 0x43, 0x44, 0x45, 
        0x46
    };

    // //Variable Registers
    // uint8_t V0;
    // uint8_t V1;
    // uint8_t V2;
    // uint8_t V3;
    // uint8_t V4;
    // uint8_t V5;
    // uint8_t V6;
    // uint8_t V7;
    // uint8_t V8;
    // uint8_t V9;
    // uint8_t VA;
    // uint8_t VB;
    // uint8_t VC;
    // uint8_t VD;
    // uint8_t VE;
    // uint8_t VF;

    uint16_t I;         //Points to locations in memory
    wchar_t PC;         //Points at current instruction in memory
    uint16_t stack[64]; //Stack to save addresses

    void loadROM(const char*);
    void CPU();
};

#endif